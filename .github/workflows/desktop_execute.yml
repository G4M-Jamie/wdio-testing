name: WDIO Test

on:
  workflow_dispatch:
 
  
jobs:
  test-runner:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        run: ["g4m"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update All Packages
        run: sudo apt-get update -y

      - name: Download Chrome browser
        run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

      - name: Install Chrome browser
        run: sudo dpkg -i google-chrome-stable_current_amd64.deb

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: NPM Install
        run: npm install

      - name: Install specific version of Chromedriver for GH
        run: npm install chromedriver@${{ vars.CHROME_VERSION }}

      - name: Run Test - ${{ matrix.run }}
        run: npm test

      - name: Upload variables
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: variables
          path: |
            passed.txt
            failed.txt

      - name: Download variables
        if: ${{ always() }}
        uses: actions/download-artifact@v2
        with:
          name: variables
          path: .

      - name: Set job variables for Slack message
        if: ${{ always() }}
        run: |

          export PASSED=$(cat passed.txt)
          export FAILED=$(cat failed.txt)
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          sed -i "s/\$PASSED/${{ env.PASSED }}/g" ".github/workflows/slack-messaging/desktop/slack-payload-${{ matrix.run }}-${{ job.status }}.json"
          sed -i "s/\$FAILED/${{ env.FAILED }}/g" ".github/workflows/slack-messaging/desktop/slack-payload-${{ matrix.run }}-${{ job.status }}.json"


          echo "JOB_STATUS=${{ job.status }}" >> $GITHUB_ENV
          sed -i "s/\$JOB_STATUS/${{ job.status }}/g" ".github/workflows/slack-messaging/desktop/slack-payload-${{ matrix.run }}-${{ job.status }}.json"

          echo "URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV
          sed -i "s/\$URL/${{ env.URL }}/g" ".github/workflows/slack-messaging/desktop/slack-payload-${{ matrix.run }}-${{ job.status }}.json"

          echo "MATRIX_RUN=${{ matrix.run }}" >> $GITHUB_ENV

      - name: Get Slack user ID
        id: slack-user-id
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        run: |
          response=$(curl -s -X POST -H "Authorization: Bearer $SLACK_TOKEN" \
            -H "Content-type: application/json" \
            -d '{
              "email": "user@example.com"  // Replace with the email address of the user who started the workflow
            }' \
            https://slack.com/api/users.lookupByEmail)
          echo "::set-output name=user_id::$(echo $response | jq -r '.user.id')"
      
      - name: Send Slack message
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          USER_ID: ${{ steps.slack-user-id.outputs.user_id }}
        run: |
          curl -X POST -H "Authorization: Bearer $SLACK_TOKEN" \
            -H "Content-type: application/json" \
            -d '{
              "channel": "@$USER_ID",
              "text": "Your workflow has started!"
            }' \
            https://slack.com/api/chat.postMessage

